---
layout: post
title: "Автоматизация работы с серверами. Часть 1.1 Установка и конфигурация FAI"
date: 2012-11-24 16:47
comments: true
categories: linux fai puppet python fabric
---

В результате предыдущих статей мы получили загружаемый по сети установцик FAI, который производит установку из каких-то своих стандартных загадочных шаблонов. Так как же именно он определяет содержимое, которое необходимо заливать на хост?

Ответ кроется в директории /srv/fai/config/.

Листинг директории выглядит следующим образом:

        # ls -lhs /srv/fai/config/
        4,0K drwxr-xr-x 2 root root 4,0K дек.  22 14:27 class
        4,0K drwxr-xr-x 2 root root 4,0K дек.  22 14:27 debconf
        4,0K drwxr-xr-x 2 root root 4,0K дек.  22 14:27 disk_config
        4,0K drwxr-xr-x 4 root root 4,0K дек.  22 14:27 files
        4,0K drwxr-xr-x 2 root root 4,0K дек.  22 14:27 hooks
        4,0K drwxr-xr-x 2 root root 4,0K дек.  22 14:27 package_config
        4,0K drwxr-xr-x 9 root root 4,0K дек.  22 14:27 scripts
        4,0K drwxr-xr-x 2 root root 4,0K дек.  22 14:27 tests

##Описание директорий:## 

| Название директории | Описание |
|:-----------:|:---------------|
|class|Дескрипторы классов, глобальные переменные, используемые для установки, и скрипты для выбора классов установки|
|debconf|Переменные, используемые в процессе debootstrap. В частности — локали|
|disk_config|Описания классов разбивки дисков|
|files|Файлы, которые будут положены в указанные директории для указанных классов. Описать трудно, проще — посмотреть самому|
|hooks|Хуки для классов — скрипты, выполняемые в процессе установки|
|package_config|Конфигурация пакетов — списки пакетов, которые будут установлены для одноименного названию файла класса. Самый сок|
|scripts|Скрипты, выполняемые в процессе установки. К примеру, установка root-пароля|
|tests|Тесты, выполняемые в процессе установки|

Переходим к описанию файлов в директориях.
##Описание файлов##
**class:**

| Название файла | Описание |
|:-----------:|:---------------|
|10-base-classes|Скрипт, определяющий базовый класс для установки. Зачем нужно — чуть далее|
|20-hwdetect.source |Скрипт, определяющий, какие модули необходимы для этого хоста|
|50-host-classes|**Важно.** Логика, определяющая, какой именно класс используется для установки, с помощью hostname, переданного из DHCP. |
|*.var|Глобальные переменные, используемые во время установки|

**debconf:**

| Название файла | Описание |
|:-----------:|:---------------|
|*|Параметры для одноименных названию файла класса, передаваемые в debootstrap. Локали, shadow-пароли. Если вы хоть раз ставили Debian — то поймете|

**disk_config:**

| Название файла | Описание |
|:-----------:|:---------------|
|*|Параметры разбивки для различных классов.|

Здесь уместно заметить, что удобнее создать пару классов вроде "1PARTITION8GBSWAP" и "2PARTITION16GBSWAP", и подключать их в случае необходимости уже в classes/50-host-classes. Чаще всего дисковые конфигурации похожи на всех хостах, и хватает всего нескольких классов.

**files:**

Здесь хранятся файлы в формате 
        
        files/etc/hosts/CLASSNAME

Содержимое для файла /etc/hosts определяется в одноименной файлу директории в файле, одноименном названию класса. Если мозг не лопнул - достаточно просто посмотреть своими глазами.

**hooks:**

Как было сказано ранее - хуки, используемые в процессе установки. Если вам захочется чего-то странного и извращенного - добро пожаловать сюда.

**package_config:**

| Название файла | Описание |
|:-----------:|:---------------|
|*|Списки пакетов, которые необходимо установить для каждого из классов|


**scripts:**

| Название файла | Описание |
|:-----------:|:---------------|
|*|Скрипты, вызываемые в процессе установки. Сами скрипты лежат в одноименных классу директориях|

**tests:**

| Название файла | Описание |
|:-----------:|:---------------|
|*|Тесты, вызываемые в процессе установки|

Их рассматривать пока не будем - есть логи, и их хватает.



Помимо всего прочего, есть несколько классов, вызываемых автомагически в процессе установки:

**Стандартные классы:**

| Название класса | Описание |
|:-----------:|:---------------|
|LAST|Класс, вызываемый по окончанию установки для выполнения завершающих скриптов|
|AMD64/I386|Класс, вызывающий установку нужной версии ядра. см. файл /srv/fai/config/package_config/DEFAULT|
|GRUB_PC|Обеспечивает корректную установку загрузчика, см. файл /srv/fai/config/scripts/GRUB_PC/10-setup|
|DEFAULT|Класс по умолчанию, с минимально необходимым набором ПО (GRUB, Ядро, прочие зависимости классов)|







Перейдем к практике.

##Практика:##

К сожалению, никаких универсальных классов здесь предложить нельзя - в каждом отдельном случае необходима ручная настройка классов.

Поставим довольно простую задачу - установить nginx-proxy-сервер. 
Характеристики сервера:
CPU: x86_64
16GB RAM
